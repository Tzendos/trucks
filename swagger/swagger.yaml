openapi: 3.0.0
info:
  version: "1.0"
  title: Trucks documentation
  description: Документация Trucks сервиса
  contact:
    name: Tzendos
    url: https://tzendos.ru
    email: hacking.memory@gmail.com
  license:
    name: proprietary

servers:
  - url: https://back.dev.trucks.ru
    description: Trucks dev server
  - url: https://back.stage.trucks.ru
    description: Trucks stage server
  - url: https://back.trucks.ru
    description: Trucks production server
  - url: http://{host}:{port}/{path}
    description: Custom Trucks server
    variables:
      host:
        description: API host
        default: localhost
      port:
        default: '80'
        description: API port
      path:
        default: ''
        description: API path

security:
  - bearerAuth: []

tags:
  - name: public
    description: Публичное API

components:
  schemas:
    Truck:
      type: object
      required:
        - name
        - price
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: ID
        name:
          type: string
          description: Наименование
        price:
          type: integer
          description: Стоимость

    # Exceptions
    BaseException:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Сообщение об ошибке
        data:
          type: object
          description: Дополнительные параметры
    ValidationException:
      allOf:
        - $ref: '#/components/schemas/BaseException'
        - properties:
            data:
              description: Ключ - имя поля, значение - правило валидации
              additionalProperties:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: Имя правила
                    params:
                      type: array
                      items:
                        type: string
                      description: Параметры правила

  responses:
    TrucksResponse:
      description: Список грузовиков
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Truck'
    TruckResponse:
      description: Информация о грузовике
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Truck'
    TruckImageResponse:
      description: Изображение грузовика
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
                description: URL изображения
              size:
                type: string
                description: Человекочитаемый размер изображения

    NotFoundResponse:
      description: Не найдено
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseException'
              - example: {"message": "entity_not_found"}

    ValidationErrorResponse:
      description: Ошибка валидации
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationException'

paths:
  /trucks:
    get:
      summary: Получить список грузовиков
      operationId: getTrucks
      tags:
        - Truck
      responses:
        200:
          $ref: '#/components/responses/TrucksResponse'
    post:
      summary: Добавление грузовика
      operationId: createTruck
      tags:
        - Truck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Truck'
      responses:
        200:
          $ref: '#/components/responses/TruckResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
        422:
          $ref: '#/components/responses/ValidationErrorResponse'
  /trucks/{truckId}:
    get:
      summary: Получить грузовик по ID
      operationId: getTruckById
      parameters:
        - name: truckId
          in: path
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
      tags:
        - Truck
      responses:
        200:
          $ref: '#/components/responses/TruckResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
    patch:
      summary: Обновить информацию о грузовике
      operationId: updateTruckById
      tags:
        - Truck
      parameters:
        - name: truckId
          in: path
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Truck'
      responses:
        200:
          $ref: '#/components/responses/TruckResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
        422:
          $ref: '#/components/responses/ValidationErrorResponse'
    delete:
      summary: Удалить запись грузовика
      operationId: deleteTruckById
      tags:
        - Truck
      parameters:
        - name: truckId
          in: path
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
      responses:
        200:
          description: Грузовик успешно удален
        404:
          $ref: '#/components/responses/NotFoundResponse'
  /img/{truckId}:
    get:
      summary: Получить изображение грузовика по ID
      operationId: getTruckImageById
      parameters:
        - name: truckId
          in: path
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
      tags:
        - TruckImage
      responses:
        200:
          $ref: '#/components/responses/TruckImageResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
    post:
      summary: Добавление изображения грузовика
      operationId: createTruckImage
      tags:
        - TruckImage
      parameters:
        - name: truckId
          in: path
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                picture:
                  type: string
                  format: binary
                  description: Изображение грузовика
      responses:
        200:
          $ref: '#/components/responses/TruckResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
        422:
          $ref: '#/components/responses/ValidationErrorResponse'
    patch:
      summary: Обновить изображение грузовика
      operationId: updateTruckImageById
      tags:
        - TruckImage
      parameters:
        - in: path
          name: truckId
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
        - in: query
          name: PATCH method
          required: true
          schema:
            type: string
            example: "_method"
          description: Вспомогательный флаг для загрузки файлов в PATCH запросе
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                picture:
                  type: string
                  format: binary
                  description: Изображение грузовика
      responses:
        200:
          $ref: '#/components/responses/TruckImageResponse'
        404:
          $ref: '#/components/responses/NotFoundResponse'
        422:
          $ref: '#/components/responses/ValidationErrorResponse'
    delete:
      summary: Удалить изображение грузовика
      operationId: deleteTruckImageById
      tags:
        - TruckImage
      parameters:
        - name: truckId
          in: path
          required: true
          description: Идентификатор грузовика
          schema:
            type: integer
      responses:
        200:
          description: Изображение грузовика успешно удалено
        404:
          $ref: '#/components/responses/NotFoundResponse'
